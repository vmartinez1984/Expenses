@model Expenses.Models.MontsWithoutInterest

@{
    ViewData["Title"] = "Compra a meses sin intereses";
}

<h1 class="text-info">Detalles</h1>

<div>
    <h4 class="text-info">Compra a meses sin intereses</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExpensesTotal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExpensesTotal)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Amount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Amount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateStart)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateStart)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Editar</a> |
    <a asp-action="Index">Regresar a la lista</a>
</div>
<hr />
<div>
    <h3 class="text-secondary">Lista de pagos</h3>
    @await Html.PartialAsync("_AddPay", new MontsWithoutInterestDetails(0,0,Model.ListPays.Count() +1, Model.Id ))
    @await Html.PartialAsync("_ListPays", Model.ListPays)
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}