@model Expenses.BusinessLayer.Dtos.Outputs.DepositPlanFullDtoOut

@{
    ViewData["Title"] = "Ahorros planes";
}

<h1>Detalles</h1>

<div>
    <h4>Ahorro plan</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Amount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Amount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Goal)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Goal)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SubcategoryName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SubcategoryName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateRegister)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateRegister)
        </dd>        
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Editar</a> |
    <a asp-action="Index">Regresar a la lista</a>
</div>
<hr/>
@await Html.PartialAsync("_AddExpense", new Expenses.BusinessLayer.Dtos.Inputs.ExpenseDtoIn())
<h2 class="text-info">Lista</h2>
@await Html.PartialAsync("_ListExpenses", Model.ListExpenses)