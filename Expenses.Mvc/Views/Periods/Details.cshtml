@using Expenses.Core.Dtos
@model PeriodFullDto

@{
    ViewData["Title"] = "Periodos";
    decimal balance = 0;
    List<SubcategoryDto> subcategories = ViewBag.ListSubcategories2;
}

<div class="card">
    <div class="card-header">
        <h2 class="text-info">@Model.Name</h2>
        <hr/>
        @await Html.PartialAsync("../Expenses/_create", ViewBag.ExpenseDto as ExpenseDto)

        <div id="divTotal"></div>
    </div>
    <div class="card-body">
         @foreach (var item in Model.ListExpenses)
         {
            <div class="row border border-primary mt-1 p-1">

                <div class="col-4 text-secondary">
                    <div class="row">
                        <div class="col">
                            <input type="checkbox" onchange="sum()" name="expense" value="@item.Budget"/>
                            @Html.DisplayFor(modelItem => item.CategoryName)
                        </div>                        
                
                        <div class="col">@Html.DisplayFor(modelItem => item.SubcategoryName)</div>                        
                
                        <div class="col">@Html.DisplayFor(modelItem => item.Name)</div>

                        <div class="col">@Html.DisplayFor(modelItem => item.DateRegister)</div>
                    </div>
                </div>
                
                <div class="col-2">@Html.DisplayFor(modelItem => item.Budget)</div>

                @if (item.Amount == 0)
                {
                    <div class="text-danger col-2">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </div>
                }
                else
                {
                    <div class="text-success col-2">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </div>
                }
                
                <div class="col-2">
                    @{
                        if (item.CategoryId == 2){
                            balance +=  item.Amount;
                        }
                        else
                        {
                            balance -=  item.Amount;                                    
                        }
                    }
                    @balance.ToString("C")
                </div>


                <div class="col-2 text-center">                
                    @if(item.Id == 0)
                    {                                 
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modelExpense" onclick="addExpense(@item.SubcategoryId)">
                            Agregar
                        </button>
                    }
                    else
                    {                    
                        <button type="button" class="btn btn-warning text-white" data-bs-toggle="modal" data-bs-target="#modelExpense" onclick="editExpense(@item.Id)">
                            Editar
                        </button>
                    }
                </div>
                
            </div>
         }            
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var periodId = @Model.Id
        var subcategories = new Array()
        var total = 0

        @foreach (var item in subcategories)
        {
            <text>
            subcategories.push({Id : @item.Id, Name: '@item.Name', Amount : @item.Amount}) 
            </text>
        }

        function loadAmount(){            
            var subcategory
                        
            for(i=0; i < subcategories.length; i++){
                var subcategoryId

                subcategoryId = document.getElementById('SubcategoryId').value
                if(subcategories[i].Id == subcategoryId){
                    subcategory = subcategories[i]
                }
            }

            document.getElementById('Amount').value = subcategory.Amount;
        }

        function addExpense(subcategoryId){
            document.getElementById('SubcategoryId').value =subcategoryId
            document.getElementById('PeriodId').value = periodId
            document.getElementById('Id').value = 0
            loadAmount()
        }

        function editExpense(expenseId){
            url = '/api/expenses/'+expenseId

            fetch(url)
            .then(response => response.json())
            .then((response)=>{
                //console.log(response)
                setExpense(response)
            })
        }

        function setExpense(expense){
            document.getElementById('Id').value = expense.id
            document.getElementById('PeriodId').value = expense.periodId
            document.getElementById('SubcategoryId').value = expense.subcategoryId
            document.getElementById('Name').value = expense.name
            document.getElementById('Amount').value = expense.amount
        }

        function saveInApartN(){
            var subcategory 
            var subcategoryId

            subcategoryId = document.getElementById('SubcategoryId').value
            subcategory = subcategories.find(item => item.Id == subcategoryId)
            document.getElementById('Name').value = subcategory.Name

        }

        function sum(){
             var listChecks

             listChecks = document.getElementsByName('expense')
             total = 0             
             listChecks.forEach(check =>{
                 if(check.checked){
                     total +=parseFloat(check.value)
                 }
             })

             document.getElementById('divTotal').innerHTML = "$ " + total
        }
    </script>
}